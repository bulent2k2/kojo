* Upgrade to 2.13.15:
Got <.gz> from: https://github.com/scala/scala/releases/tag/v2.13.15

Copied the changes to inject Turkish keywords from:
    https://github.com/bulent2k2/scala-2/commit/a81b2ce4931da9f55f3c7bb49b58778b3fda53ca
to update three files (change to Main.scala is a single-line for only diagnostic message)
    Main.scala              987 Scala            ~/src/scala-2.13.15/src/compiler/scala/tools/nsc/Main.scala
    Scanners.scala        65663 Scala            ~/src/scala-2.13.15/src/compiler/scala/tools/nsc/ast/parser/Scanners.scala
    StdNames.scala        70184 Scala            ~/src/scala-2.13.15/src/reflect/scala/reflect/internal/StdNames.scala


Built the jars and copied over to Kojo with:
> gunzip 
> cd ~/src/scala-2.13.15
> java_std_path
> sbt dist/mkPack
> cp build/pack/lib/* ~/kojo-repo/scala-tr/build/pack/lib/

Note: `java_std_path` alias changes PATH to get us jdk1.8.0_271.jdk

** Main.scala one-line change:
    println("[Kojo] Scala Compiler v2.13.15 with Turkish keywords")

** Scanners.scala changes start at:
  private val allKeywords = List[(Name, Token)](
    // Turkish first so that compiler errors report with English keywords
    nme.trABSTRACTkw  -> ABSTRACT,
    ...

** StdNames.scala changes start after:
  abstract class Keywords extends {
    private[this] val kw = new KeywordSetBuilder

    final val ABSTRACTkw: TermName  = kw("abstract")

    ...
    final val trABSTRACTkw: TermName  = kw("soyut")
    final val trCASEkw: TermName      = kw("durum")
    ...

* Older notes:

This is for scala 2.13.x:
interregnum after the latest stable release of 2.13.8 and before the
future release 2.13.9

To switch the scala compiler to use the version with Turkish keyword support, just do the following:
    cd ~/src
    git clone https://github.com/bulent2k2/scala-2
    cd ~/src/scala-2
    git checkout turkish_keyword_2.13.N  // pick the right N as per the scala version in build.sbt
    sbt dist/mkPack
    cp ~/src/scala-2/build/pack/lib/*.jar ~/src/kojo/git/kojo/scala-tr/build/pack/lib/

To bump up the scala compiler, say to 2.13.8, we can clone my fork of
scala-2 and use the appropriate turkish_keyword_<tag> branch as above.
No need to repeat what I did for 2.13.6 which is below for the record only:

(0) - Fork scala/scala in GitHub (e.g., https://github.com/bulent2k2/scala-2)
    - Copy release tags to the fork:
      git remote add upstream https://github.com/scala/scala
      git fetch upstream
      git push --tags
    - Create a branch from the relevant release tag:
      git branch tr_keywords_2.13.8 v2.13.8
    - Work on the branch:
      git checkout tr_keywords_2.13.8
(1) Build the compiler
    - But first do the few changes to the following files:
      -- src/reflect/scala/reflect/internal/StdNames.scala
      -- src/compiler/scala/tools/nsc/ast/parser/Scanners.scala
      And optionally:
      -- src/compiler/scala/tools/nsc/Main.scala
      The code to change is shown in commit:
        https://github.com/bulent2k2/scala-2/commit/a81b2ce4931da9f55f3c7bb49b58778b3fda53ca
      or,
        https://github.com/bulent2k2/scala-2.13.6-tr/commit/8fafc8c0ff86e3b12269c4380bad8c14ff1f3bd5
    - Make sure to use java 8 or 11 and not 15.
      See: https://stackoverflow.com/questions/73514108/runtime-exception-using-local-build-of-scala-compiler-java-lang-nosuchmethoder
      ben@Bulents-MacBook-Pro kojo % java -version
      java version "1.8.0_271"
      Java(TM) SE Runtime Environment (build 1.8.0_271-b09)
      Java HotSpot(TM) 64-Bit Server VM (build 25.271-b09, mixed mode)
      ben@Bulents-MacBook-Pro kojo %
    - sbt
    - dist/mkPack
(2) - Push the local branch to your repo
      git push -u origin tr_keywords_2.13.8
(3) Copy lib folder including contents from <path-to-your-clone>/scala-2/build/pack/lib
    to ./build/pack/lib and override the old jars.
    E.g., /Users/ben/src/scala-2/build/pack
* The End
